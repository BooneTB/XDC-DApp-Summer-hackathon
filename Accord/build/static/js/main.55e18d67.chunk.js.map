{"version":3,"sources":["assets/logo_3_2.png","util/constants.js","components/Home.js","util/index.js","components/FileDrop/FileDrop.js","util/stor.js","contract/metadata.js","contract/polysignContract.js","components/CreatePolysign.js","util/covalent.js","components/History.js","components/Packet.js","util/nftport.js","components/Sign.js","assets/logo.png","App.js","reportWebVitals.js","index.js"],"names":["COVALENT_KEY","process","NFT_PORT_KEY","APP_NAME","CHAIN_OPTIONS","name","url","id","ACTIVE_CHAIN","Object","keys","EXAMPLE_FORM","title","description","signerAddress","files","console","log","CHECKLIST_ITEMS","Home","props","navigate","useNavigate","className","span","items","map","item","i","CheckCircleTwoTone","twoToneColor","type","size","onClick","src","logo","ipfsUrl","cid","fileName","signatureUrl","window","location","origin","capitalize","string","charAt","toUpperCase","slice","getExplorerUrl","hash","useTx","col","k","render","dataIndex","key","bytesToSize","bytes","parseInt","Math","floor","round","pow","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","textAlign","height","overflow","padding","boxSizing","thumbInner","minWidth","FileDrop","setFiles","useDropzone","onDrop","acceptedFiles","file","assign","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","style","useEffect","forEach","revokeObjectURL","API_KEY","makeStorageClient","Web3Storage","token","storeFiles","client","put","fetchMetadata","axios","get","POLYSIGN_CONTRACT","inputs","internalType","stateMutability","anonymous","indexed","outputs","getSigner","ethereum","enable","provider","ethers","providers","Web3Provider","signer","deployContract","factory","ContractFactory","validatedAddress","utils","getAddress","deploy","contract","deployed","address","markContractCompleted","contractAddress","polysignContract","Contract","markCompleted","result","Step","Steps","CreatePolysign","useState","data","setData","error","setError","loading","setLoading","setResult","updateData","value","isValidData","length","addr","e","validAddress","isValid","create","undefined","body","x","res","f","path","blob","Blob","JSON","stringify","metadataFile","File","allFiles","message","toString","placeholder","prefix","onChange","target","disabled","href","contractUrl","direction","current","getTransactions","chainId","Option","Select","COLUMNS","row","Date","toLocaleDateString","toLocaleTimeString","History","setAddress","setChainId","fetchHistory","alert","defaultValue","v","cId","dataSource","columns","onRow","record","rowIndex","event","open","tx_hash","onDoubleClick","onContextMenu","onMouseEnter","onMouseLeave","Packet","showModal","setShowModal","setName","sigCanvas","useRef","signId","authed","sign","filesToSign","preventDefault","visible","footer","dataUrl","toDataURL","ref","penColor","canvasProps","createSignatureNFT","ownerAddress","signatureData","params","chain","mint_to_address","formData","FormData","fetch","lastModified","append","options","method","headers","Authorization","request","getMintedNFT","txHash","Sign","account","useParams","fetchData","useMemo","toLowerCase","nftResults","Header","Layout","Content","Footer","App","setAccount","login","accs","checkConnected","connected","isConnected","isSignature","pathname","startsWith","mode","defaultSelectedKeys","Item","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55e18d67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_3_2.98005b88.png\";","export const COVALENT_KEY = process.env.REACT_APP_COVALENT_KEY; // covalent api key\nexport const NFT_PORT_KEY = process.env.REACT_APP_NFT_PORT_KEY; // nft port key\n\nexport const APP_NAME = \"Polysign\";\nexport const APP_DESC = \"Polygon-backed esignature requests\";\n\nexport const CHAIN_OPTIONS = {\n  80001: {\n    name: \"Mumbai\",\n    url: \"https://mumbai.polygonscan.com/\",\n    id: 80001,\n  },\n  137: {\n    name: \"Matic Mainnet\",\n    url: \"https://polygonscan.com/\",\n    id: 137,\n  },\n};\n\nexport const CHAIN_IDS = Object.keys(CHAIN_OPTIONS)\n\n// 1: { name: \"ethereum\", url: \"https://etherscan.io/tx/\", id: 1 },\n// 42: { name: \"kovan\", url: \"https://kovan.etherscan.io/tx/\", id: 42 },\n// 4: { name: \"rinkeby\", url: \"https://rinkeby.etherscan.io/tx/\", id: 4 },\n\nexport const ACTIVE_CHAIN = CHAIN_OPTIONS[\"80001\"];\n\nexport const EXAMPLE_FORM = {\n  title: \"Renter agreement\",\n  description: \"Please agree to the included renters agreement document\",\n  signerAddress: \"0xD7e02fB8A60E78071D69ded9Eb1b89E372EE2292\",\n  files: [],\n};\n\nexport const IPFS_BASE_URL = \"https://ipfs.io/ipfs\"\n\nconsole.log(\"config\", COVALENT_KEY, NFT_PORT_KEY, ACTIVE_CHAIN);\n","import React from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport logo from \"../assets/logo_3_2.png\";\nimport ReactRotatingText from \"react-rotating-text\";\nimport { useNavigate } from \"react-router-dom\";\nimport { APP_DESC } from \"../util/constants\";\nimport { CheckCircleOutlined, CheckCircleTwoTone } from \"@ant-design/icons\";\n\nconst CHECKLIST_ITEMS = [\n  \"Free esignature request page hosting on IPFS\",\n  \"Completed esignatures saved on Smart Contracts\",\n  \"No vendor agreements required\",\n];\n\nfunction Home(props) {\n  const navigate = useNavigate();\n\n  const goToCreate = () => {\n    navigate(\"/create\");\n  };\n  return (\n    <div className=\"hero-section\">\n      <Row>\n        <Col span={12}>\n          <div className=\"hero-slogan-section\">\n            <div className=\"hero-slogan\">\n              <p>\n                {APP_DESC} for&nbsp;\n                <ReactRotatingText\n                  items={[\"businesses\", \"individuals\", \"everyone\"]}\n                />\n                .\n              </p>\n            </div>\n            {/* // \"#eb2f96\" */}\n            {CHECKLIST_ITEMS.map((item, i) => {\n              return (\n                <p>\n                  <CheckCircleTwoTone twoToneColor=\"#00aa00\" />\n                  &nbsp;\n                  {item}\n                </p>\n              );\n            })}\n            <br />\n\n            <Button type=\"primary\" size=\"large\" onClick={goToCreate}>\n              Create esignature request\n            </Button>\n          </div>\n        </Col>\n        <Col span={12}>\n          <img src={logo} className=\"hero-image\" />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nHome.propTypes = {};\n\nexport default Home;\n","import { ACTIVE_CHAIN, IPFS_BASE_URL } from \"./constants\";\n\nexport const ipfsUrl = (cid, fileName) => {\n  // let url = `https://ipfs.io/ipfs/${cid}`;\n  let url = `${IPFS_BASE_URL}/${cid}`;\n  if (fileName) {\n    return `${url}/${fileName}`;\n  }\n  return url;\n};\n\nexport const signatureUrl = (cid) => `${window.location.origin}/sign/${cid}`;\n\nexport function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport const getExplorerUrl = (hash, useTx) =>\n  `${ACTIVE_CHAIN.url}${useTx ? \"tx/\" : \"address/\"}${hash}`;\n\nexport const createJsonFile = (signload, fileName) => {\n  const st = JSON.stringify(signload);\n  const blob = new Blob([st], { type: \"application/json\" });\n  const fileData = new File([blob], fileName);\n  return fileData;\n};\n\nexport const getDateStringFromTimestamp = (ts, showTime) => {\n  const d = new Date(ts);\n  if (showTime) {\n    return `${d.toLocaleDateString()} ${d.toLocaleTimeString()}`;\n  }\n  return d.toLocaleDateString();\n};\n\nexport const col = (k, render) => ({\n  title: capitalize(k),\n  dataIndex: k,\n  key: k,\n  render,\n});\n\nexport function bytesToSize(bytes) {\n  var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n  if (bytes == 0) return \"0 Byte\";\n  var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n  return Math.round(bytes / Math.pow(1024, i), 2) + \" \" + sizes[i];\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { bytesToSize } from \"../../util\";\n\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: \"inline-flex\",\n  borderRadius: 2,\n  border: \"2px dotted gray\", //  #eaeaea\",\n  marginBottom: 8,\n  marginRight: 8,\n  width: 200,\n  textAlign: \"left\",\n  height: 75,\n  overflow: \"hidden\",\n  padding: 4,\n  boxSizing: \"border-box\",\n};\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n};\n\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\",\n};\n\nexport function FileDrop({ files, setFiles }) {\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: (acceptedFiles) => {\n      console.log(\"files\", acceptedFiles);\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n  });\n\n  const thumbs = files.map((file) => (\n    <div style={thumb} key={file.name}>\n      <div style={thumbInner}>\n        <p>\n          <b>{file.name}</b>\n          <br />\n          {file.size && (\n            <span>\n              Size: {bytesToSize(file.size)}\n              <br />\n            </span>\n          )}\n          {file.type && <span>Type: {file.type}</span>}\n        </p>\n      </div>\n    </div>\n  ));\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n\n  return (\n    <section>\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n      <br />\n      <b>Files to upload:</b>\n      <aside style={thumbsContainer}>{thumbs}</aside>\n    </section>\n  );\n}\n","// import { Web3Storage } from \"web3.storage\";\nimport axios from \"axios\";\nimport { Web3Storage } from \"web3.storage/dist/bundle.esm.min.js\"; // webpack 4\n\nconst API_KEY = process.env.REACT_APP_STORAGE_KEY;\nif (!API_KEY) {\n  alert('REACT_APP_STORAGE_KEY environment variable is required')\n}\n\nfunction getAccessToken() {\n  return API_KEY;\n}\n\nfunction makeStorageClient() {\n  return new Web3Storage({ token: getAccessToken() });\n}\n\nexport const ipfsUrl = (cid, fileName) => {\n    let url = `https://ipfs.io/ipfs/${cid}`;\n    if (fileName) {\n      return `${url}/${fileName}`;\n    }\n    return url;\n  };\n\n\nexport async function storeFiles(files) {\n  console.log('store', files)\n  const client = makeStorageClient();\n  const cid = await client.put(files);\n  console.log(\"stored files with cid:\", cid);\n  return cid;\n}\n\nexport function fetchMetadata(cid) {\n  const url = `${ipfsUrl(cid)}/metadata.json`\n  return axios.get(url)\n}\n\nexport async function retrieveFiles(cid) {\n  const client = makeStorageClient();\n  const res = await client.get(cid);\n  console.log(`Got a response! [${res.status}] ${res.statusText}`);\n  if (!res.ok) {\n    throw new Error(`failed to get ${cid}`);\n  }\n\n  // request succeeded! do something with the response object here...\n\n  return res;\n}\n","export const POLYSIGN_CONTRACT = {\n  _format: \"hh-sol-artifact-1\",\n  contractName: \"Polysign\",\n  sourceName: \"contracts/Polysign.sol\",\n  abi: [\n    {\n      inputs: [\n        {\n          internalType: \"string\",\n          name: \"_title\",\n          type: \"string\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_signerAddress\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"previousOwner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"OwnershipTransferred\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: false,\n          internalType: \"string\",\n          name: \"oldStr\",\n          type: \"string\",\n        },\n        {\n          indexed: false,\n          internalType: \"string\",\n          name: \"newStr\",\n          type: \"string\",\n        },\n      ],\n      name: \"UpdatedResourceUrl\",\n      type: \"event\",\n    },\n    {\n      inputs: [],\n      name: \"getResourceUrl\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"getSigner\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"getTitle\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"string\",\n          name: \"_nftUrl\",\n          type: \"string\",\n        },\n      ],\n      name: \"markCompleted\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"owner\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"renounceOwnership\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"transferOwnership\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"string\",\n          name: \"newUrl\",\n          type: \"string\",\n        },\n      ],\n      name: \"updateResourceUrl\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n  ],\n  bytecode:\n    \"0x60806040523480156200001157600080fd5b50604051620014e8380380620014e88339818101604052810190620000379190620003d8565b620000576200004b6200010460201b60201c565b6200010c60201b60201c565b62000087604051806060016040528060298152602001620014bf6029913983620001d060201b620005ef1760201c565b81600190805190602001906200009f9291906200029f565b5080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600560006101000a81548160ff021916908315150217905550505062000688565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620002728282604051602401620001e992919062000473565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200027660201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b828054620002ad9062000593565b90600052602060002090601f016020900481019282620002d157600085556200031d565b82601f10620002ec57805160ff19168380011785556200031d565b828001600101855582156200031d579182015b828111156200031c578251825591602001919060010190620002ff565b5b5090506200032c919062000330565b5090565b5b808211156200034b57600081600090555060010162000331565b5090565b6000620003666200036084620004d7565b620004ae565b9050828152602081018484840111156200037f57600080fd5b6200038c8482856200055d565b509392505050565b600081519050620003a5816200066e565b92915050565b600082601f830112620003bd57600080fd5b8151620003cf8482602086016200034f565b91505092915050565b60008060408385031215620003ec57600080fd5b600083015167ffffffffffffffff8111156200040757600080fd5b6200041585828601620003ab565b9250506020620004288582860162000394565b9150509250929050565b60006200043f826200050d565b6200044b818562000518565b93506200045d8185602086016200055d565b62000468816200065d565b840191505092915050565b600060408201905081810360008301526200048f818562000432565b90508181036020830152620004a5818462000432565b90509392505050565b6000620004ba620004cd565b9050620004c88282620005c9565b919050565b6000604051905090565b600067ffffffffffffffff821115620004f557620004f46200062e565b5b62000500826200065d565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600062000536826200053d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200057d57808201518184015260208101905062000560565b838111156200058d576000848401525b50505050565b60006002820490506001821680620005ac57607f821691505b60208210811415620005c357620005c2620005ff565b5b50919050565b620005d4826200065d565b810181811067ffffffffffffffff82111715620005f657620005f56200062e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620006798162000529565b81146200068557600080fd5b50565b610e2780620006986000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b3b2e5bb1161005b578063b3b2e5bb146100ef578063d2fd02be1461010d578063f2fde38b14610129578063ff3c1a8f1461014557610088565b8063715018a61461008d5780637ac3c02f146100975780638da5cb5b146100b557806391a8b36a146100d3575b600080fd5b610095610163565b005b61009f6101eb565b6040516100ac9190610a3b565b60405180910390f35b6100bd610215565b6040516100ca9190610a3b565b60405180910390f35b6100ed60048036038101906100e891906108c9565b61023e565b005b6100f761030e565b6040516101049190610a56565b60405180910390f35b610127600480360381019061012291906108c9565b6103a0565b005b610143600480360381019061013e91906108a0565b610465565b005b61014d61055d565b60405161015a9190610a56565b60405180910390f35b61016b61068b565b73ffffffffffffffffffffffffffffffffffffffff16610189610215565b73ffffffffffffffffffffffffffffffffffffffff16146101df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d690610b26565b60405180910390fd5b6101e96000610693565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61024661068b565b73ffffffffffffffffffffffffffffffffffffffff16610264610215565b73ffffffffffffffffffffffffffffffffffffffff16146102ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b190610b26565b60405180910390fd5b7f2da9e2df85c09953beceaa98fb363086a2bf1fbd193ef58aeeaa742a479c6be56002826040516102ec929190610aaf565b60405180910390a1806002908051906020019061030a929190610780565b5050565b60606002805461031d90610c41565b80601f016020809104026020016040519081016040528092919081815260200182805461034990610c41565b80156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b5050505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610430576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042790610b06565b60405180910390fd5b8060049080519060200190610446929190610780565b506001600560006101000a81548160ff02191690831515021790555050565b61046d61068b565b73ffffffffffffffffffffffffffffffffffffffff1661048b610215565b73ffffffffffffffffffffffffffffffffffffffff16146104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890610b26565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054890610ae6565b60405180910390fd5b61055a81610693565b50565b60606001805461056c90610c41565b80601f016020809104026020016040519081016040528092919081815260200182805461059890610c41565b80156105e55780601f106105ba576101008083540402835291602001916105e5565b820191906000526020600020905b8154815290600101906020018083116105c857829003601f168201915b5050505050905090565b6106878282604051602401610605929190610a78565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610757565b5050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805461078c90610c41565b90600052602060002090601f0160209004810192826107ae57600085556107f5565b82601f106107c757805160ff19168380011785556107f5565b828001600101855582156107f5579182015b828111156107f45782518255916020019190600101906107d9565b5b5090506108029190610806565b5090565b5b8082111561081f576000816000905550600101610807565b5090565b600061083661083184610b6b565b610b46565b90508281526020810184848401111561084e57600080fd5b610859848285610bff565b509392505050565b60008135905061087081610dda565b92915050565b600082601f83011261088757600080fd5b8135610897848260208601610823565b91505092915050565b6000602082840312156108b257600080fd5b60006108c084828501610861565b91505092915050565b6000602082840312156108db57600080fd5b600082013567ffffffffffffffff8111156108f557600080fd5b61090184828501610876565b91505092915050565b61091381610bcd565b82525050565b600061092482610bb1565b61092e8185610bbc565b935061093e818560208601610c0e565b61094781610d02565b840191505092915050565b6000815461095f81610c41565b6109698186610bbc565b945060018216600081146109845760018114610996576109c9565b60ff19831686526020860193506109c9565b61099f85610b9c565b60005b838110156109c1578154818901526001820191506020810190506109a2565b808801955050505b50505092915050565b60006109df602683610bbc565b91506109ea82610d13565b604082019050919050565b6000610a02603483610bbc565b9150610a0d82610d62565b604082019050919050565b6000610a25602083610bbc565b9150610a3082610db1565b602082019050919050565b6000602082019050610a50600083018461090a565b92915050565b60006020820190508181036000830152610a708184610919565b905092915050565b60006040820190508181036000830152610a928185610919565b90508181036020830152610aa68184610919565b90509392505050565b60006040820190508181036000830152610ac98185610952565b90508181036020830152610add8184610919565b90509392505050565b60006020820190508181036000830152610aff816109d2565b9050919050565b60006020820190508181036000830152610b1f816109f5565b9050919050565b60006020820190508181036000830152610b3f81610a18565b9050919050565b6000610b50610b61565b9050610b5c8282610c73565b919050565b6000604051905090565b600067ffffffffffffffff821115610b8657610b85610cd3565b5b610b8f82610d02565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b6000610bd882610bdf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610c2c578082015181840152602081019050610c11565b83811115610c3b576000848401525b50505050565b60006002820490506001821680610c5957607f821691505b60208210811415610c6d57610c6c610ca4565b5b50919050565b610c7c82610d02565b810181811067ffffffffffffffff82111715610c9b57610c9a610cd3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79207468652064657369676e61746564207369676e65722063616e206360008201527f6f6d706c6574652074686520636f6e7472616374000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610de381610bcd565b8114610dee57600080fd5b5056fea2646970667358221220f9b0f8cdcc13b51608cd03483a30b75cd4573c71f1add579d4e04d0e0ab3c01264736f6c634300080400334465706c6f79696e67206120506f6c797369676e20636f6e74726163742077697468207469746c653a\",\n  deployedBytecode:\n    \"0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063b3b2e5bb1161005b578063b3b2e5bb146100ef578063d2fd02be1461010d578063f2fde38b14610129578063ff3c1a8f1461014557610088565b8063715018a61461008d5780637ac3c02f146100975780638da5cb5b146100b557806391a8b36a146100d3575b600080fd5b610095610163565b005b61009f6101eb565b6040516100ac9190610a3b565b60405180910390f35b6100bd610215565b6040516100ca9190610a3b565b60405180910390f35b6100ed60048036038101906100e891906108c9565b61023e565b005b6100f761030e565b6040516101049190610a56565b60405180910390f35b610127600480360381019061012291906108c9565b6103a0565b005b610143600480360381019061013e91906108a0565b610465565b005b61014d61055d565b60405161015a9190610a56565b60405180910390f35b61016b61068b565b73ffffffffffffffffffffffffffffffffffffffff16610189610215565b73ffffffffffffffffffffffffffffffffffffffff16146101df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d690610b26565b60405180910390fd5b6101e96000610693565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61024661068b565b73ffffffffffffffffffffffffffffffffffffffff16610264610215565b73ffffffffffffffffffffffffffffffffffffffff16146102ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b190610b26565b60405180910390fd5b7f2da9e2df85c09953beceaa98fb363086a2bf1fbd193ef58aeeaa742a479c6be56002826040516102ec929190610aaf565b60405180910390a1806002908051906020019061030a929190610780565b5050565b60606002805461031d90610c41565b80601f016020809104026020016040519081016040528092919081815260200182805461034990610c41565b80156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b5050505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610430576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042790610b06565b60405180910390fd5b8060049080519060200190610446929190610780565b506001600560006101000a81548160ff02191690831515021790555050565b61046d61068b565b73ffffffffffffffffffffffffffffffffffffffff1661048b610215565b73ffffffffffffffffffffffffffffffffffffffff16146104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890610b26565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054890610ae6565b60405180910390fd5b61055a81610693565b50565b60606001805461056c90610c41565b80601f016020809104026020016040519081016040528092919081815260200182805461059890610c41565b80156105e55780601f106105ba576101008083540402835291602001916105e5565b820191906000526020600020905b8154815290600101906020018083116105c857829003601f168201915b5050505050905090565b6106878282604051602401610605929190610a78565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610757565b5050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805461078c90610c41565b90600052602060002090601f0160209004810192826107ae57600085556107f5565b82601f106107c757805160ff19168380011785556107f5565b828001600101855582156107f5579182015b828111156107f45782518255916020019190600101906107d9565b5b5090506108029190610806565b5090565b5b8082111561081f576000816000905550600101610807565b5090565b600061083661083184610b6b565b610b46565b90508281526020810184848401111561084e57600080fd5b610859848285610bff565b509392505050565b60008135905061087081610dda565b92915050565b600082601f83011261088757600080fd5b8135610897848260208601610823565b91505092915050565b6000602082840312156108b257600080fd5b60006108c084828501610861565b91505092915050565b6000602082840312156108db57600080fd5b600082013567ffffffffffffffff8111156108f557600080fd5b61090184828501610876565b91505092915050565b61091381610bcd565b82525050565b600061092482610bb1565b61092e8185610bbc565b935061093e818560208601610c0e565b61094781610d02565b840191505092915050565b6000815461095f81610c41565b6109698186610bbc565b945060018216600081146109845760018114610996576109c9565b60ff19831686526020860193506109c9565b61099f85610b9c565b60005b838110156109c1578154818901526001820191506020810190506109a2565b808801955050505b50505092915050565b60006109df602683610bbc565b91506109ea82610d13565b604082019050919050565b6000610a02603483610bbc565b9150610a0d82610d62565b604082019050919050565b6000610a25602083610bbc565b9150610a3082610db1565b602082019050919050565b6000602082019050610a50600083018461090a565b92915050565b60006020820190508181036000830152610a708184610919565b905092915050565b60006040820190508181036000830152610a928185610919565b90508181036020830152610aa68184610919565b90509392505050565b60006040820190508181036000830152610ac98185610952565b90508181036020830152610add8184610919565b90509392505050565b60006020820190508181036000830152610aff816109d2565b9050919050565b60006020820190508181036000830152610b1f816109f5565b9050919050565b60006020820190508181036000830152610b3f81610a18565b9050919050565b6000610b50610b61565b9050610b5c8282610c73565b919050565b6000604051905090565b600067ffffffffffffffff821115610b8657610b85610cd3565b5b610b8f82610d02565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b6000610bd882610bdf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610c2c578082015181840152602081019050610c11565b83811115610c3b576000848401525b50505050565b60006002820490506001821680610c5957607f821691505b60208210811415610c6d57610c6c610ca4565b5b50919050565b610c7c82610d02565b810181811067ffffffffffffffff82111715610c9b57610c9a610cd3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79207468652064657369676e61746564207369676e65722063616e206360008201527f6f6d706c6574652074686520636f6e7472616374000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610de381610bcd565b8114610dee57600080fd5b5056fea2646970667358221220f9b0f8cdcc13b51608cd03483a30b75cd4573c71f1add579d4e04d0e0ab3c01264736f6c63430008040033\",\n  linkReferences: {},\n  deployedLinkReferences: {},\n};\n","import { ethers } from \"ethers\";\nimport { POLYSIGN_CONTRACT } from \"./metadata\";\n\nconst getSigner = async () => {\n  let signer;\n  await window.ethereum.enable();\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  signer = provider.getSigner();\n  return signer;\n};\n\nexport const getPrimaryAccount = async () => {\n  let provider;\n  if (window.ethereum) {\n    await window.ethereum.enable();\n    provider = new ethers.providers.Web3Provider(window.ethereum);\n  } else {\n    return undefined; // No supported account detected.\n  }\n\n  const accounts = await provider.listAccounts();\n  return accounts[0];\n};\n\n// https://dapp-world.com/smartbook/how-to-use-ethers-with-polygon-k5Hn\nexport async function deployContract(title, signerAddress) {\n  const signer = await getSigner();\n\n  //   https://dev.to/yosi/deploy-a-smart-contract-with-ethersjs-28no\n\n  // Create an instance of a Contract Factory\n  const factory = new ethers.ContractFactory(\n    POLYSIGN_CONTRACT.abi,\n    POLYSIGN_CONTRACT.bytecode,\n    signer\n  );\n\n  const validatedAddress = ethers.utils.getAddress(signerAddress);\n\n  // Start deployment, returning a promise that resolves to a contract object\n  const contract = await factory.deploy(title, validatedAddress);\n  await contract.deployed();\n  console.log(\"Contract deployed to address:\", contract.address);\n  return contract;\n}\n\nexport const validAddress = (addr) => {\n  try {\n    ethers.utils.getAddress(addr);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const markContractCompleted = async (contractAddress, signatureUrl) => {\n  if (!contractAddress || !signatureUrl) {\n    return {};\n  }\n  const signer = await getSigner();\n  const polysignContract = new ethers.Contract(\n    contractAddress,\n    POLYSIGN_CONTRACT.abi,\n    signer\n  );\n  const result = await polysignContract.markCompleted(signatureUrl);\n  return result;\n};\n","import React, { useState } from \"react\";\nimport { Button, Input, Row, Col, Radio, Steps } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { signatureUrl, ipfsUrl, getExplorerUrl } from \"../util\";\nimport { EXAMPLE_FORM } from \"../util/constants\";\nimport { FileDrop } from \"./FileDrop/FileDrop\";\nimport { storeFiles } from \"../util/stor\";\nimport { deployContract, validAddress } from \"../contract/polysignContract\";\n\nconst { Step } = Steps;\n\nfunction CreatePolysign(props) {\n  const [data, setData] = useState({ ...EXAMPLE_FORM });\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState();\n\n  const updateData = (key, value) => {\n    setData({ ...data, [key]: value });\n  };\n\n  const isValid = (data) => {\n    return (\n      data.title &&\n      data.description &&\n      data.files.length > 0 &&\n      validAddress(data.signerAddress)\n    );\n  };\n  const isValidData = isValid(data);\n\n  const create = async () => {\n    setError(undefined);\n\n    if (!isValidData) {\n      setError(\n        \"Please provide a title, description, valid address, and at least one file.\"\n      );\n      return;\n    }\n\n    setLoading(true);\n    const body = { ...data };\n\n    // Format files for upload.\n    const files = body.files.map((x) => {\n      return x;\n    });\n\n    let res = { ...data };\n\n    try {\n      // 1) deploy base contract with metadata,\n      const contract = await deployContract(data.title, data.signerAddress);\n      // res[\"contract\"] = contract;\n      res[\"address\"] = contract.address\n      res[\"files\"] = files.map(f => f.path)\n\n      const blob = new Blob([JSON.stringify(res)], { type: 'application/json' })\n      const metadataFile = new File([blob], 'metadata.json')\n      const allFiles = [...files, metadataFile]\n\n      // 2) Upload files to ipfs,\n      const cid = await storeFiles(allFiles);\n      res['cid'] = cid\n\n      // 3) return shareable url.\n      res[\"signatureUrl\"] = signatureUrl(cid);\n      res[\"contractUrl\"] = getExplorerUrl(res.address);\n\n      // Result rendered after successful doc upload + contract creation.\n      setResult(res);\n      try {\n        // await postPacket(res.esignature request);\n      } catch (e) {\n        console.error(\"error posting esignature request\", e);\n      }\n    } catch (e) {\n      console.error(\"error creating esignature request\", e);\n      setError(e.message || e.toString())\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStep = () => {\n    if (!!result) {\n      return 2;\n    } else if (isValidData) {\n      return 1;\n    }\n    return 0;\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col span={16}>\n          <div className=\"create-form white boxed\">\n            <h2>Create new esignature request</h2>\n            <br />\n\n            <h3 className=\"vertical-margin\">Esignature request title:</h3>\n            <Input\n              placeholder=\"Title of the esignature request\"\n              value={data.title}\n              prefix=\"Title:\"\n              onChange={(e) => updateData(\"title\", e.target.value)}\n            />\n            <TextArea\n              aria-label=\"Description\"\n              onChange={(e) => updateData(\"description\", e.target.value)}\n              placeholder=\"Description of the esignature request\"\n              prefix=\"Description\"\n              value={data.description}\n            />\n\n            {/* TODO: add configurable amount of items */}\n            <h3 className=\"vertical-margin\">Upload documents to esign:</h3>\n            <FileDrop\n              files={data.files}\n              setFiles={(files) => updateData(\"files\", files)}\n            />\n\n            <h3 className=\"vertical-margin\">Enter signer address:</h3>\n            <p>\n              In order to sign or agree to the documents, the viewer or\n              potential signer of the documents must prove ownership of a\n              particular address\n            </p>\n            <Input\n              placeholder=\"Wallet address of signer\"\n              value={data.signerAddress}\n              prefix=\"Signer Address:\"\n              onChange={(e) => updateData(\"signerAddress\", e.target.value)}\n            />\n            <br />\n\n            <Button\n              type=\"primary\"\n              className=\"standard-button\"\n              onClick={create}\n              disabled={loading} // || !isValidData}\n              loading={loading}\n            >\n              Create esignature request!\n            </Button>\n            {!error && !result && loading && (\n              <span>&nbsp;Note this may take a few moments.</span>\n            )}\n            <br />\n            <br />\n            {error && <div className=\"error-text\">{error}</div>}\n            {result && (\n              <div>\n                <div className=\"success-text\">Created esignature request!</div>\n                <a href={ipfsUrl(result.cid)} target=\"_blank\">\n                  View metadata\n                </a>\n                <br />\n                <a href={result.contractUrl} target=\"_blank\">\n                  View created contract\n                </a>\n                <br />\n                <br />\n                <p>\n                  Share this url with the potential signer:\n                  <br />\n                  <a href={result.signatureUrl} target=\"_blank\">\n                    Open eSignature url\n                  </a>\n                </p>\n\n                {/* <div>{JSON.stringify(result, null, \"\\t\")}</div> */}\n              </div>\n            )}\n          </div>\n        </Col>\n        <Col span={1}></Col>\n        <Col span={7}>\n          <div className=\"white boxed\">\n            <Steps\n              className=\"standard-margin\"\n              direction=\"vertical\"\n              size=\"small\"\n              current={getStep()}\n            >\n              <Step title=\"Fill in fields\" description=\"Enter required data.\" />\n              <Step\n                title=\"Create esignature request\"\n                description=\"Requires authorizing a create esignature request operation.\"\n              />\n              <Step\n                title=\"Wait for esignature\"\n                description=\"Your esignature request will be live for others to view and submit esignature.\"\n              />\n            </Steps>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nCreatePolysign.propTypes = {};\n\nexport default CreatePolysign;\n","import axios from \"axios\";\nimport { COVALENT_KEY } from \"./constants\";\n\nexport const getTransactions = (chainId, address) => {\n  const url = `https://api.covalenthq.com/v1/${chainId}/address/${address}/transactions_v2/?&key=${COVALENT_KEY}`;\n  return axios.get(url);\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Input, Select, Table } from \"antd\";\nimport { ACTIVE_CHAIN, APP_NAME, CHAIN_OPTIONS } from \"../util/constants\";\nimport { getTransactions } from \"../util/covalent\";\nimport { capitalize, col } from \"../util\";\n\nconst { Option } = Select;\n\nconst COLUMNS = [\n  //   col(\"tx_hash\"),\n  //   col(\"from_address\"),\n  col(\"to_address\"),\n  col(\"value\"),\n  col(\"gas_spent\"),\n  col(\n    \"block_signed_at\",\n    (row) =>\n      `${new Date(row).toLocaleDateString()} ${new Date(\n        row\n      ).toLocaleTimeString()}`\n  ),\n];\n\nfunction History(props) {\n  const [address, setAddress] = useState(\n    \"0x73bceb1cd57c711feac4224d062b0f6ff338501e\"\n  );\n  const [chainId, setChainId] = useState(ACTIVE_CHAIN.id + \"\");\n  const [loading, setLoading] = useState();\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    setData(undefined)\n  }, [chainId])\n\n  const fetchHistory = async () => {\n    if (!address || !chainId) {\n      alert(\"Address and chainId are required\");\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const res = await getTransactions(chainId, address);\n      setData(res.data.data.items);\n    } catch (e) {\n      console.error(e);\n      alert(\"error getting signdata\" + e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <p>\n        This page can be used to lookup {APP_NAME} transactions against a given\n        {ACTIVE_CHAIN.name} address.\n      </p>\n      <Input\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n        prefix=\"Address\"\n      ></Input>\n      <br />\n      <p></p>\n      <Select\n        defaultValue={chainId}\n        style={{ width: 120 }}\n        onChange={(v) => setChainId(v)}\n      >\n        {Object.keys(CHAIN_OPTIONS).map((cId, i) => {\n          return (\n            <Option key={i} value={cId}>\n              {capitalize(CHAIN_OPTIONS[cId].name)}\n            </Option>\n          );\n        })}\n      </Select>\n      &nbsp;\n      <Button onClick={fetchHistory} disabled={loading} loading={loading}>\n        View transactions\n      </Button>\n      <br />\n      <hr />\n      {data && (\n        <div>\n          <h1>Transaction History</h1>\n          <Table\n            dataSource={data}\n            columns={COLUMNS}\n            className=\"pointer\"\n            onRow={(record, rowIndex) => {\n              return {\n                onClick: (event) => {\n                  console.log(\"event\", event.target.value);\n                  window.open(\n                    `${CHAIN_OPTIONS[chainId].url}tx/${record.tx_hash}`,\n                    \"_blank\"\n                  );\n                }, // click row\n                onDoubleClick: (event) => {}, // double click row\n                onContextMenu: (event) => {}, // right button click row\n                onMouseEnter: (event) => {}, // mouse enter row\n                onMouseLeave: (event) => {}, // mouse leave row\n              };\n            }}\n          />\n          ;\n        </div>\n      )}\n    </div>\n  );\n}\n\nHistory.propTypes = {};\n\nexport default History;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport SignatureCanvas from \"react-signature-canvas\";\nimport { Button, Modal, Input } from \"antd\";\nimport { getExplorerUrl, ipfsUrl } from \"../util\";\nimport { ACTIVE_CHAIN } from \"../util/constants\";\n\nfunction Packet(props) {\n  const [showModal, setShowModal] = useState(false);\n  const [name, setName] = useState();\n  const sigCanvas = useRef();\n\n  const {\n    signId,\n    contractAddress,\n    authed,\n    signerAddress,\n    loading,\n    sign,\n    title,\n    files,\n  } = props;\n\n  const postSignature = () => {\n    const dataUrl = sigCanvas.current.toDataURL();\n    sign(dataUrl);\n  };\n\n  const openUrl = (url) => window.open(url, \"_blank\");\n  console.log(\"authorized\", authed);\n\n  if (!authed) {\n    return (\n      <div className=\"centered\">\n        <p>\n          You are not logged in with the expected user for this esignature\n          contract.\n          <br />\n          <b className=\"error-text\">\n            Please log in with address: {signerAddress}\n          </b>\n        </p>\n\n        <p>\n          <a href=\"/\">Return to home</a>\n        </p>\n      </div>\n    );\n  }\n\n  const filesToSign = files || [];\n  console.log('files', filesToSign)\n\n  return (\n    <div>\n      {/* <div>{JSON.stringify(props, null, \"\\t\")}</div> */}\n      <div>\n        <h1>{props.title}</h1>\n        <h3>{props.description}</h3>\n      </div>\n      <div>\n        <a href={getExplorerUrl(contractAddress)} target=\"_blank\">\n          View Contract ({ACTIVE_CHAIN.name})\n        </a>\n        <br />\n        <a href={ipfsUrl(signId, 'metadata.json')} target=\"_blank\">\n          View Request\n        </a>\n      </div>\n\n      <br />\n      <h3>Documents to acknowledge: </h3>\n      {filesToSign.map((f, i) => {\n        return (\n          <li key={i}>\n            <a\n              href=\"#\"\n              onClick={(e) => {\n                e.preventDefault();\n                openUrl(ipfsUrl(signId, f));\n              }}\n            >\n              {f}\n            </a>\n          </li>\n        );\n      })}\n      <br />\n      <br />\n      <p>\n        By continuing, you agree to the documents listed and available for\n        download above.\n      </p>\n      <Button\n        type=\"primary\"\n        onClick={() => setShowModal(true)}\n        disabled={!authed || filesToSign.length === 0}\n      >\n        Accept Documents\n      </Button>\n\n      <Modal\n        visible={showModal}\n        title={`${title}: Sign and complete`}\n        footer={[\n          <Button key=\"back\" onClick={() => setShowModal(false)}>\n            Cancel\n          </Button>,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            loading={loading}\n            onClick={postSignature}\n          >\n            Sign\n          </Button>,\n        ]}\n      >\n        <Input\n          placeholder=\"Type name\"\n          value={name}\n          prefix=\"Type name:\"\n          onChange={(e) => setName(e.target.value)}\n        />\n        <br />\n        <hr />\n        <p>Draw signature:</p>\n        <SignatureCanvas\n          ref={sigCanvas}\n          penColor=\"green\"\n          canvasProps={{ width: 500, height: 200, className: \"sigCanvas\" }}\n        />\n      </Modal>\n    </div>\n  );\n}\n\nexport default Packet;\n","import axios from \"axios\";\nimport { createJsonFile } from \".\";\nimport { NFT_PORT_KEY } from \"./constants\";\n\nexport const createSignatureNFT = async (\n  name,\n  description,\n  ownerAddress,\n  signatureData\n) => {\n  const params = {\n    chain: \"polygon\",\n    mint_to_address: ownerAddress,\n    description,\n    name,\n  };\n\n  const formData = new FormData();\n  // https://stackoverflow.com/questions/6850276/how-to-convert-dataurl-to-file-object-in-javascript\n  const blob = await (await fetch(signatureData)).blob();\n  const file = new File([blob], \"signature.jpg\", {\n    type: \"image/jpeg\",\n    lastModified: new Date(),\n  });\n  // const f = createJsonFile(data, \"metadata.json\");\n  formData.append(\"file\", file, file.name);\n\n  var options = {\n    method: \"POST\",\n    url: 'https://api.nftport.xyz/v0/files',\n    params,\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: NFT_PORT_KEY,\n      \"content-type\":\n        \"multipart/form-data; boundary=---011000010111000001101001\",\n    },\n    data: formData,\n  };\n\n  return axios.request(options);\n};\n\nexport const getMintedNFT = (txHash) => {\n  var options = {\n    method: \"GET\",\n    url: \"https://api.nftport.xyz/v0/mints/\" + txHash,\n    params: { chain: \"polygon\" },\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: NFT_PORT_KEY,\n    },\n  };\n\n  return axios.request(options);\n};\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport { Spin } from \"antd\";\nimport Packet from \"./Packet\";\nimport { useParams } from \"react-router-dom\";\nimport { createSignatureNFT, getMintedNFT } from \"../util/nftport\";\nimport { fetchMetadata, retrieveFiles } from \"../util/stor\";\nimport { getExplorerUrl } from \"../util\";\nimport {\n  getPrimaryAccount,\n  markContractCompleted,\n} from \"../contract/polysignContract\";\n\nfunction Sign({ account }) {\n  const { signId } = useParams(); // cid\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState();\n\n  const fetchData = async () => {\n    console.log(\"fetch\", signId);\n    if (!signId) {\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const res = await fetchMetadata(signId);\n      setData(res.data);\n      console.log(\"esignature request\", res.data);\n    } catch (e) {\n      console.error(e);\n      alert(\"error getting signdata\" + e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [signId]);\n\n  const authed = useMemo(() => {\n    return data && (data.signerAddress || '').toLowerCase() === (account || '').toLowerCase()\n  } ,[data, account])\n\n  const { description, title, signerAddress, address: contractAddress } = data;\n\n  const sign = async (signatureData) => {\n    let nftResults = {};\n\n    setLoading(true);\n\n    try {\n      //   https://docs.nftport.xyz/docs/nftport/b3A6MjE2NjM5MDM-easy-minting-w-url\n      let res = await createSignatureNFT(\n        title,\n        description,\n        signerAddress,\n        signatureData\n      );\n      nftResults[\"signatureNft\"] = res.data;\n      const url = nftResults[\"transaction_external_url\"];\n      res = await markContractCompleted(contractAddress, url || signId);\n      nftResults = { nftResults, ...res };\n      try {\n        res = await getMintedNFT(res[\"hash\"]);\n        nftResults = { nftResults, ...res };\n      } catch (e) {\n        // soft error for token id fetch.\n        console.error(e);\n      }\n      setResult(nftResults);\n    } catch (e) {\n      console.error(\"error signing\", e);\n      alert(\"Error completing esignature: \" + JSON.stringify(e));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"container\">\n        <Spin size=\"large\" />\n      </div>\n    );\n  }\n\n  if (result) {\n    return (\n      <div className=\"container\">\n        {/* <img src={logo} className=\"header-logo\" /> */}\n        <br />\n        <br />\n        <h1>Transaction complete!</h1>\n        <p>Access your completed polygon contract and signature packet.</p>\n\n        <a href={getExplorerUrl(contractAddress)} target=\"_blank\">\n          View Contract\n        </a>\n        <p>Full response below:</p>\n        <pre>{JSON.stringify(result, null, \"\\t\")}</pre>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container boxed white\">\n      <h2 className=\"centered\">Sign Documents</h2>\n      <br />\n      <Packet {...data} authed={authed} sign={sign} signId={signId} />\n    </div>\n  );\n}\n\nSign.propTypes = {};\n\nexport default Sign;\n","export default __webpack_public_path__ + \"static/media/logo.d4fbb84b.png\";","import React, { useEffect, useState } from \"react\";\n\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\n\nimport Home from \"./components/Home\";\nimport CreatePolysign from \"./components/CreatePolysign\";\nimport { Layout, Menu, Breadcrumb, Button } from \"antd\";\nimport { APP_NAME } from \"./util/constants\";\nimport History from \"./components/History\";\nimport Sign from \"./components/Sign\";\nimport logo from \"./assets/logo.png\";\n\nimport \"./App.css\";\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  const [account, setAccount] = useState();\n  const [loading ,setLoading] = useState(false);\n\n  const login = async () => {\n    setLoading(true)\n    const e = window.ethereum\n    if (!e) {\n      alert('Metamask must be connected to use Polysign')\n      return\n    }\n    try {\n      const accs = await e.request({ method: 'eth_requestAccounts' });\n      console.log('accounts', accs)\n      setAccount(accs[0])\n    } catch (e) {\n\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const checkConnected = async () => {\n    const e = window.ethereum\n    if (!e) {\n      return\n    }\n    const connected = e.isConnected()\n    console.log('connected', connected)\n    if (connected) {\n      await login()\n    }\n  }\n\n  const logout = \n\n  useEffect(() => {\n    checkConnected()\n  }, [])\n\n  const navigate = useNavigate();\n  const path = window.location.pathname;\n\n  const isSignature = path.startsWith(\"/sign\");\n\n  return (\n    <div className=\"App\">\n      <Layout className=\"layout\">\n        <Header>\n          {/* <div className=\"logo\" /> */}\n          <Menu\n            // theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={[]}\n          >\n            <Menu.Item key={0}>\n              <img\n                src={logo}\n                className=\"header-logo pointer\"\n                onClick={() => navigate(\"/\")}\n              />\n            </Menu.Item>\n\n            {!isSignature && (\n              <>\n                <Menu.Item key={1} onClick={() => navigate(\"/create\")}>\n                  Create esignature request\n                </Menu.Item>\n                <Menu.Item key={2} onClick={() => navigate(\"/history\")}>\n                  Lookup\n                </Menu.Item>\n              </>\n            )}\n            {!account && <span>\n              <Button type=\"primary\" onClick={login}  loading={loading} disabled={loading}>Login with Metamask</Button>\n            </span> }\n            {account && <span>\n              Hello: {account}</span>}\n          </Menu>\n        </Header>\n        <Content style={{ padding: \"0 50px\" }}>\n          <div className=\"container\">\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/sign/:signId\" element={<Sign account={account} />} />\n              <Route path=\"/create\" element={<CreatePolysign account={account}/>} />\n              <Route path=\"/history\" element={<History />} />\n            </Routes>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          {APP_NAME} ©2022 - A Polygon-powered esignature platform\n        </Footer>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}